=begin
#SwiftPOS API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: unset

=end

require "uri"

module SwiftApi
  class LicenseApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Registers a specific device for use with a specific app.
    # 
    # @param device_license The device license.
    # @param api_key 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def license_put(device_license, api_key, opts = {})
      license_put_with_http_info(device_license, api_key, opts)
      return nil
    end

    # Registers a specific device for use with a specific app.
    # 
    # @param device_license The device license.
    # @param api_key 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def license_put_with_http_info(device_license, api_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: LicenseApi.license_put ..."
      end
      # verify the required parameter 'device_license' is set
      if @api_client.config.client_side_validation && device_license.nil?
        fail ArgumentError, "Missing the required parameter 'device_license' when calling LicenseApi.license_put"
      end
      # verify the required parameter 'api_key' is set
      if @api_client.config.client_side_validation && api_key.nil?
        fail ArgumentError, "Missing the required parameter 'api_key' when calling LicenseApi.license_put"
      end
      # resource path
      local_var_path = "/api/License"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json', 'application/xml', 'text/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'])
      header_params[:'ApiKey'] = api_key

      # form parameters
      form_params = {}

      # proxy parameters
      proxy_params = opts[:'proxy'] if !opts[:'proxy'].nil?  
      proxyuserpwd_params = opts[:'proxyuserpwd'] if !opts[:'proxyuserpwd'].nil?

      # http body (model)
      post_body = @api_client.object_to_http_body(device_license)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :proxy_params => proxy_params,
        :proxyuserpwd_params => proxyuserpwd_params,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: LicenseApi#license_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
